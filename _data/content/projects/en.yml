# you can move this content to front matter of [language]/tabs/projects.md
###########################################################
#                Projects Page Data
###########################################################
page_data:
  main:
    header: "Projects"
    info: "Let me introduce the project that I worked on!!"
    text_color: "white"
    # if you don't want to use background image, comment it. back_color will be activated.
    img: ":4.jpg"
    back_color: "lightblue"

  category:
    - title: "Git"
      type: id_git
      color: "#6495ED"
    - title: "Lab"
      type: id_Lab
      color: "#62b462"
    - title: "Activities"
      type: id_club
      color: "#FFB6C1"
    - title: "Computer"
      type: id_computer
      color: "#2FD0ED"
    - title: "Python"
      type: id_python
      color: "gray"

  list:
    # git
    - type: id_git
      project_name: "Github blogging process"
      project_excerpt: "Create my own homepage"
      img: ":github.png"
      img_title: "img title8"
      date: "2022-04-20"
      post: |
        ## 1. Motivation
        I always wanted to make my own homepage. 
        I tried to make it using react and node.js, but it took a long time to learn design and coding.
        Therefore, while looking for a simple way to make it, I learned how to create a blog with github.
        
        ***
        ### 2. Start github blog
        1. Start with [github_blog_create](https://velog.io/@shg4821/%EA%B9%83%ED%97%88%EB%B8%8C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0-1)
        1. Choose one from [Jekyll theme](https://jamstackthemes.dev/ssg/jekyll/)
        1. check [README](https://github.com/junsusong98/junsusong98.github.io/blob/main/README.md#readme)--> check Github pages
        1. Import it to 'local' using git clone, modify code using VScode, and `git push`
          - After that, add, commit, and push are repeated to continue pushing.;;
          - Check the **local build** of README.
          - But I may not know what you mean...

        ***

        ### 3. Local build detailed method
        1. Install ruby [Install Jekyll](https://jekyllrb.com/docs/installation/)
        2. Go from Ruby 'start command'.

        ![Image](:ruby.png)
        
        3. Enter `gem install bundler jekyll` after going to code address imported to 'local' via cd
        
        ![Image](:ruby2.png)
        
        ![Image](:ruby3.png)
        
        4. Enter `bundle exec jekyll serve` after installation is completed
        
        ![Image](:ruby4.png)
        
        5. Enter **http://localhost:4000/** in Chrome after loading!!

        Then, you can see that it's floating well

        ***

        ## 4. Analyzing my own homepage code

        |   name   | detail  |        Info                                                                       |
        | :------: | :-----: | :-------------------------------------------------------------------------------: |
        | _data    | owner   | Where to enter your name and personal information                                 |
        |          | conf    | In the main, add a language and change the picture on the left                    |
        |          | content | Place to manage **Project**                                                       |
        |          |  lang   | Where you enter the **contents of home** and the overall contents of the homepage |
        | _layouts |   -     | Determine the overall tools for the categories on the left                        |
        | _post    |  -      | Place to manage **(En)Blog**                                                      |
        | assets   | img     | Where to save pictures                                                            |
        | tabs     |   -     | Place to manage **(En)links** and **(En)About**                                   |
        | index.md |    -    | Where to change **(En)home's photo**                                              |
        | ko       |   -     | Place to manage **(Ko)links** and **(Ko)About** and **(Ko)Blog**                  |
        | vi       |  -      | Place to manage **(Vi)links** and **(Vi)About** and **(Vi)Blog**                  |

        Oh, it's hard! But it's so nice that it's organized neatly!

        Decorate your own homepage from 2022-04-20!

    # 연구실
    - type: id_Lab
      project_name: "Making a Ferroelectric FET (~2021-11-12)"
      project_excerpt: "FeFET production process and Mask production"
      img: ":FeFET.jpg"
      img_title: "img title6"
      date: "2021-08-27"
      post: |
        ## 1. Motivation
        Paper : [IGZO channel ferroelectric memory FET](https://ieeexplore.ieee.org/document/9224469) (Masaharu Kobayashi ,1-4 Sept. 2020)
        
        An experiment was conducted to confirm the ferroelectric phenomenon in ITZO rather than IGZO by adding HZO based on the paper.

        To that end, it is important to plan the manufacturing process of FeFET well, and we made the mask necessary for the photolithography process.

        ***

        ## 2. Introduction of team members
        - [Taewon Jin](https://yh2424.github.io/people/taewonjin/)
        - [Teahyeon Noh](https://yh2424.github.io/people/NTH/)

        ***

        ## 3. Progress
        **Please understand that there is a private part of the lab that is covered.**

        ![Image](:FeFET2.png)

        In the process, it is necessary to check how it is deposited on the Si substrate.
        
        Therefore, we check the deposition process while making it using the shape of the ppt.

        ![Image](:FeFET4.png)

        It was also necessary to identify which process was required for each step.

        If the mask is not checked several times, the position of the Mask may change.
        
        I may have to wait for the Mask production again, so we need to check carefully.

        ![Image](:FeFET3.png)

        I made a Mask using Klayout and check the ppt to see if there is any problem.

        ![Image](:FeFET5.png)

        Steps to request the manufacture of the Mask to the company

        ***

        ## 4. Result

        All were completed without re-deposition and the ferroelectic phenomenon was confirmed.

        However, the performance was lower than that of IGZO.

        ***

        ## 5. Code

        This is the Klayout python code.

        - Making a square

        ```python
        class Square :
          global layout,unit,top
          
          def __init__(self, x, y, width, height,l):  
            self.x = x/unit
            self.y = y/unit
            self.width = width/unit
            self.height = height/unit
            self.l = l
            self.lay = layout.layer(l,0)
            
            self.box = pya.Box(self.x-self.width/2,self.y-self.height/2,self.x+self.width/2,self.y+self.height/2)
            
          
          def info(self):
            return pya.Region(self.box)
            
          def create(self):   
            obj = pya.Region(self.box)
            res = top.shapes(self.lay).insert(self.box) 
            return obj
          
          def create_hole(self,h_x,h_y,h_width,h_height):
            h_x = h_x/unit
            h_y = h_y/unit
            h_width = h_width/unit
            h_height = h_height/unit
            self.h_box = pya.Box(h_x-h_width/2,h_y-h_height/2,h_x+h_width/2,h_y+h_height/2)
          
            self.box = pya.Polygon(self.box)
            self.box.insert_hole(self.h_box)
            obj = pya.Region(self.box)
            res= top.shapes(self.lay).insert(self.box)
            return obj
          
          def dup(self,dif_x,dif_y,num):
            dif_x = dif_x/unit
            dif_y = dif_y/unit
            new_obj = self.box
            total_obj = pya.Region(new_obj)
            top.shapes(self.lay).insert(new_obj)
            for i in range(0,num):
              new_obj = new_obj.dup()
              new_obj = new_obj.moved(dif_x,dif_y)
              res = top.shapes(self.lay).insert(new_obj)
              total_obj += new_obj
            return total_obj
            
          def dup_2(self,dif_x,dif_y,num1,num2):
            dif_x = dif_x/unit
            dif_y = dif_y/unit
            new_obj = self.box
            total_obj = pya.Region()
            
            for i in range(0,num1):
              if i!=0:
                new_obj = new_obj.dup()
                new_obj = new_obj.moved(0,dif_y)
              for j in range(0,num2):
                if j ==0 and i!=0:
                  new_obj = new_obj.moved(-(num2-1)*dif_x,0)
                new_box = new_obj.dup()
                if j ==0:
                  pass
                else:
                  new_obj = new_obj.moved(dif_x,0)
                res = top.shapes(self.lay).insert(new_obj)
                total_obj += new_obj
                
            return total_obj

          def rotate(self,degree):
            self.box.move(-self.x,-self.y)
            rotate = pya.ICplxTrans(1,degree,False,0,0)
            new_obj =pya.Polygon(self.box).transform(rotate)
          
            new_obj.move(self.x,self.y) 
            res = top.shapes(self.lay).insert(new_obj)
              
            return new_obj
        ```

        - Making a circle

        ```python
        class Circle:
          global layout,unit,top,angle_point
          
          def __init__(self, x, y, r,degree, rotation,l):  
            self.x = x/unit
            self.y = y/unit
            self.r = r/unit
            self.l = l
            self.lay = layout.layer(l,0)
            self.degree = degree
            self.n_point = self.degree / angle_point + 1
            self.radian_step = 2.0*pi*(self.degree/360) / (self.n_point - 1)
            self.radian_offset = 2.0*pi*(rotation/360)
            self.points = [pya.Point(round(self.r * math.cos(i * self.radian_step + self.radian_offset) + self.x), round(self.r * math.sin(i * self.radian_step + self.radian_offset) + self.y)) for i in range(int(self.n_point))]
            
            if self.degree != 360:
              self.points.append(pya.Point(self.x, self.y))  
            
            self.circle = pya.Polygon(self.points)
            

          def create(self):   
            res= top.shapes(self.lay).insert(self.circle)
            obj = pya.Region(self.circle) 
            return obj
          
          def create_hole(self,r2):
            r2 = r2/unit
            self.points2 = [pya.Point(round(r2 * math.cos(i * self.radian_step + self.radian_offset) + self.x), round(r2 * math.sin(i * self.radian_step + self.radian_offset) + self.y)) for i in range(int(self.n_point))]
            
            if self.degree != 360:
              self.points2.append(pya.Point(self.x, self.y))
              
            self.circle.insert_hole(self.points2)
          
            res= top.shapes(self.lay).insert(self.circle)
            obj = pya.Region(self.circle) 
            return obj

          
          def dup(self,dif_x,dif_y,num):
            dif_x = dif_x/unit
            dif_y = dif_y/unit
            new_obj = self.circle
            total_obj = pya.Region(new_obj)
            top.shapes(self.lay).insert(new_obj)
            
            for i in range(0,num):
              
              new_obj = new_obj.dup()
              new_obj = new_obj.moved(dif_x,dif_y)
              pya.Region(new_obj)
              res = top.shapes(self.lay).insert(new_obj)
              total_obj += new_obj
            return total_obj
            
          def dup_2(self,dif_x,dif_y,num1,num2):
            dif_x = dif_x/unit
            dif_y = dif_y/unit
            new_obj = self.circle
            total_obj = pya.Region()
            
            for i in range(0,num1):
              if i!=0:
                new_obj = new_obj.dup()
                new_obj = new_obj.moved(0,dif_y)
              for j in range(0,num2):
                if j ==0 and i!=0:
                  new_obj = new_obj.moved(-(num2-1)*dif_x,0)
                new_obj = new_obj.dup()
                if j ==0:
                  pass
                else:
                  new_obj = new_obj.moved(dif_x,0)
                  
                pya.Region(new_obj)
                res = top.shapes(self.lay).insert(new_obj)
                total_obj += new_obj
            return total_obj
        ```

        In addition, I have defined codes that make other shapes such as align mark and name.

        If you need it or want to use it, please send me an email.

        I will explain in detail with my example code.

    - type: id_Lab
      project_name: "Condition change according to TFT heat treatment conditions [Capstone] (~ 2021-12-01)"
      project_excerpt: "Hot plate : AS, 150°C, 200°C, 250°C"
      img: ":TFT.jpg"
      img_title: "img title5"
      date: "2021-08-20"
      post: |
        ## 1. Motivation

        ITZO (In-Sn-Zn-O) has higher mobility than IGZO.

        In addition, an efficient orbital overlapping chip phenomenon occurs in the 5s orbital of n3+ and Sn4+, making it easy to move electrons.

        Annelling has an effect on ITZO in the process.
        - The annealing process increases the electrical properties and stability of the TFT thin film. It also increases oxygen vacancy removal, M-O bond formation, and charge carrier generation.
        - Oxygen in the chamber is diffused into the empty space of the channel to reduce the empty space of oxygen and increase the interface trap between a-ITZO/SiO2.

        Thus, **I will grasp the characteristics of ITZO according to Annelling.**

        `Conditions`
        - Hot plate (AS, 150°C, 200°C, 250°C) [1 hour]
        - RTA (AS, 200°C, 300°C, 400°C, 500°C) [30 second]
        
        Announcement day : 2021-12-01

        ***

        ## 2. Introduction of team members
        - [Taewon Jin](https://yh2424.github.io/people/taewonjin/)
        - [Xinkai Sun](https://yh2424.github.io/people/xinkaisun/)
        - [Teahyeon Noh](https://yh2424.github.io/people/NTH/)

        ***

        ## 3. Progress & Results

        - <kbd> [Experiment 1] Determine the temperature dependence of ITZO </kbd>

        ![Image](:TFT2.png)

        ![Image](:TFT3.png)
        
        `Problem Occurred`

        ![Image](:TFT4.png)

        - <kbd> [Experiment 2] Changes in the device after isolation </kbd>

        ![Image](:TFT5.png)

        `Solution`

        ![Image](:TFT6.png)

        - <kbd> [Experiment 3] RTA </kbd>

        ![Image](:TFT7.png)

        ![Image](:TFT8.png)

        - <kbd> Conclusion </kbd>

        ![Image](:TFT9.png)

        ***

        ## 4. The final conclusion

        ![Image](:TFT10.png)

        ***

        ## 5. Reference

        [1] Junghwan Kim, Hoichang Yang& Jae Kyeong Jeong(2020.October.1). Nature research

        [2] Youngjoon Choi, Saeroonter Choi and Jaekyun Kim(2020. September. 29). Semicomductor Science and Technology

        ***

    - type: id_Lab
      project_name: "Check TFT performance (~ 2021-10-06)"
      project_excerpt: "TFT[Thin File Transistor] Properties according to TFT Width, Length"
      img: ":TFT(W,L).jpg"
      img_title: "img title4"
      date: "2021-08-02"
      post: |
          ## 1. Motivation

          The voltage-current relationship of TFT(Thin File Transistor) is as follows.

          ![Image](:TFT_VI2.png){: width="200" height="200"}

          ![Image](:TFT_VI3.png){: width="200" height="200"}

          Therefore, an experiment was conducted to check whether the properties of TFTs change according to changes in W and L.

          ***

          ## 2. Introduction of team members
          - [Taewon Jin](https://yh2424.github.io/people/taewonjin/)

          ***

          ## 3. Process

          Use the following TFTs:

          ![Image](:TFT(W,L)2.png)

          The Mask that will shape the Metal

          ![Image](:TFT(W,L)3.png)

          ***

          ## 4. Conclusion

          <kbd> Result of Width change! </kbd>

          ![Image](:TFT(W,L)4.png)

          <kbd> Result of Length change! </kbd>

          ![Image](:TFT(W,L)5.png)

          ***
      
    - type: id_Lab
      project_name: "TCAD Sentaurus Download and Execution Process (~ 2021-11-12)"
      project_excerpt: "Linux CenOS8 version, Semiconductor Simulation TCAD Sentaurus"
      img: ":sentaurus.png"
      img_title: "img title6"
      date: "2021-10-01"
      post: |
        
        ##  1. What is TCAD Sentaurus?
        Technology Computer-Aided Design (TCAD) refers to using computer simulations to develop and optimize semiconductor processing technologies and devices. 
        TCAD simulation tools solve fundamental, physical, partial differential equations, such as diffusion and transport equations for discretized geometries, representing the silicon wafer or the layer system in a semiconductor device. 
        This deep physical approach gives TCAD simulation predictive accuracy.
        
        Therefore, it is possible to substitute TCAD computer simulations for costly and time-consuming test wafer runs when developing and characterizing a new semiconductor device or technology.

        ***

        ## 2. Process

        I would appreciate it if you could refer to the pdf for detailed instructions. [PDF](https://github.com/junsusong98/junsusong98.github.io/blob/main/assets/img/projects/SENTAURUS다운로드방법_컴퓨터설정_송준수.pdf)

        ***

        ## 3. Result

        ![Image](:sentaurus2.jpg)

        ***

    - type: id_Lab
      project_name: "GaN-mini LED (~2021-08-02)"
      project_excerpt: "Making GaN mini LED Mask"
      img: ":LED_mask.jpg"
      #img_title: "img title2"
      date: "2021-06-30"
      post: |
        ## 1. Introduction of team members
        - [Kangseok Kim](https://yh2424.github.io/people/kangseokkim/)
        - [Seoungmin Park](https://yh2424.github.io/people/seoungminpark/)

        ***

        ## 2. Process

        ![Image](:LED_mask2.jpg)

        **Please understand that the detailed process has a private laboratory.**

        ***

    # 대외 활동
    - type: id_club
      project_name: "Overtail GameJam[2022] (~ 2022-07-20)"
      project_excerpt: "Make your own game"
      img: ":Game1.png"
      img_title: "img title9"
      date: "2022-07-18"
      post: |
        ## 1. Explain of the contest

        Competition: Overtail_GameJam

        Organized by: College of computing

        Period: Monday, July 18, 2022 to Wednesday, July 20, 2022 (3 Days)  

        ![Image](:Game_schedule.jpg)

        ***

        ## 2. Introduction of team members

        Team member: [Kim Taeyeop](https://blog.naver.com/bible20141) , [Kim kangseok](https://yh2424.github.io/people/kangseokkim/) , Song Junsu

        ***

        ## 3. Process

        Team name: NaRoHo

        Keywords: water(물), heat(더위), passion(정열)  

        Topic: On the 18th, three words related to summer will be randomly extracted and distributed to the team. Create a game using keywords for the next 3 days

        ![img](:Game2.jpg)

        After making the game, film the video and upload it to YouTube.

        ***

        ## 4. Result

        Result: 2022 Overtail Game Jam Software Dean's Excellence Award (3rd place)

        Announcement video : [https://youtu.be/uRoRvXMdkAk](https://youtu.be/uRoRvXMdkAk)

        ![img](:Overtail.jpg)

        ***

    - type: id_club
      project_name: "IC-PBL Contest (2019) (~ 2019-12-19)"
      project_excerpt: "Take care of ERICA"
      img: ":IC-PBL(2019).png"
      img_title: "img title9"
      date: "2019-09-01"
      post: |
        ## 1. Explain of the contest

        ![Image](:IC-PBL(2019).png)

        It is a contest to present ideas about what Hanyang University ERICA needs.

        ***

        ## 2. Introduction of team members
        Leader: Junsu Song (ME)

        Team members: Jin Taewon, Kim Minje, Yang Heejun

        ![Image](:contest19.png)


        ***

        ## 3. Process

        Our team presented <kbd>the problem of Hanyang University application</kbd> and conducted a survey accordingly.

        ![Image](:contest19_2.png)

        ![Image](:contest19_3.png)

        ![Image](:contest19_4.png)

        We proceeded with the <kbd>preparation step</kbd> for designing the optimal application.

        - Current status of application contracts with univ

        ![Image](:contest19_5.png)

        ![Image](:contest19_6.png)

        - Investigate what students need

        ![Image](:contest19_7.png)

        - Research the optimal GUI by examining various universities

        ![Image](:contest19_8.png)

        ![Image](:IC-PBL(2019).jpg)

        <kbd>The final GUI</kbd> designed by our team [Website used](https://quv.kr/)

        ![Image](:contest19_9.png)

        ![Image](:contest19_10.png)

        ![Image](:contest19_11.png)

        ***

        ## 4. Result

        We won `the Excellence Award` ~!

        ![Image](:IC-PBL_prime.jpg)

        ***

    - type: id_club
      project_name: "Start-up club [SSSAP] (~ 2021-08-30)"
      project_excerpt: "shopping application"
      img: ":startup.png"
      img_title: "img title10"
      date: "2021-01-01"
      post: |
        ## 1. Motivation

        The start-up club was started under the guidance of [Professor Kim Young-hyun](https://yh2424.github.io/people/younghyunkim/).

        Until February, the team members steadily presented their ideas once a week and selected the best start-up idea among them.

        After that, I presented my idea to Hanyang University's [start-up education center](https://eec.hanyang.ac.kr/circles/clubView/124) and I was able to receive support as a start-up club.

        I decided to participate in the contest and get the team's ideas evaluated.

        ![Image](:SID.png)

        ***

        ## 2. Introduction of team members
        Leader: Junsu Song (ME)

        Team members: Kim Sang Hoon, Kim Dong Gu, Kim Sung Mok, Roh Tae Hyun, Park Seung Min, Park Jae Hyuk

        ![Image](:startup_club.png)

        ***

        ## 3. Process

        ![Image](:Club3.png)

        ![Image](:Club.png)

        ![Image](:Club2.png)

        ***

        ## 4. Result

        ![Image](:startup_prime.png)

        ![Image](:SID.jpg)

        ***

    - type: id_club
      project_name: "IC-PBL contest(2021) (~ 2021-08-04)"
      project_excerpt: "Share your experiences with IC-PBL"
      img: ":IC-PBL(2021)_info.png"
      img_title: "img title11"
      date: "2021-06-01"
      post: |
        ## 1. Explain of the contest
        ![Image](:IC-PBL(2021)_info.png)

        ***

        ## 2. Introduction of team members
        Leader: Junsu Song (ME)

        Team members: [Kangseok Kim](https://yh2424.github.io/people/kangseokkim/), [Seoungmin Park](https://yh2424.github.io/people/seoungminpark/)

        ***

        ## 3. Process

        ![Image](:python.png)

        ***

        ## 4. Result

        ![Image](:IC-PBL(2021)_prove.png)

        ![Image](:IC-pbl.png)

        ***

    # 컴퓨터
    - type: id_computer
      project_name: "Making Our Own Robot with Ideas (~ 2019-11-30)"
      project_excerpt: "The Idea of Photoelectronic Creation : Making Robots for Everyday Life"
      img: ":ideal3.png"
      img_title: "img title7"
      date: "2019-09-01"
      post: |
        ## The Idea Task of Photoelectronic Creation
        - Project1: A robot that acts according to the path of various situations.
        - Project2 : Making robots necessary for everyday life.

        ***

        ## Project1
        
        ![Image](:ideal2.jpg)

        If you want to see [Video](https://github.com/junsusong98/junsusong98.github.io/blob/main/assets/img/projects/ideal.mp4), please click the link and refer to ideal.mp4!

        ## Project2
        Reason for creation: 
        As more people go to eat alone, there will be more tables for one person

        ![Image](:ideal3.png)

        ![Image](:ideal.png)

        If you raise the stick, it moves the object to the right color.

    # python
    - type: id_python
      project_name: "Automatic Data Analysis GUI (~ 2021-06-21)"
      project_excerpt: "Engineering Programming 2 : Data Analysis Using Python"
      img: ":python.png"
      img_title: "img title1"
      date: "2021-03-02"
      post: |
      
        ## 1. Introduction of team members
        Team members : [Kangseok Kim](https://yh2424.github.io/people/kangseokkim/) , Choi Ilgyu

        ***

        ## 2. Process

        I made a project through Python. Put the values measured by the semiconductor device into the project.

        ![Image](:Grape3.png)

        ![Image](:Grape4.png)

        The project is designed to automatically create graphs as shown in the picture below. 

        ![Image](:Grape1.png)

        ![Image](:Grape2.png)

        ***